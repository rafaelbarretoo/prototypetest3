import streamlit as st
import pandas as pd
import os
import io
import plotly.express as px

st.set_page_config(page_title="üìä Projeto Pseudonimiza√ß√£o", page_icon="üìä")


st.markdown(
    "<div style='text-align: center; color: #4B0082; font-size: 40px;'>"
    "Resultados das Avalia√ß√µes" "<br>"
    "Projeto Pseudonimiza√ß√£o"
    "</div>",
    unsafe_allow_html=True
)
#st.title("üìä Resultados das Avalia√ß√µes - Projeto Pseudonimiza√ß√£o")

arquivo = "avaliacoes.xlsx"

df= pd.read_excel(arquivo)
media_geral_final = df["M√©dia Final"].mean()

st.markdown(f"""
            Ap√≥s as avalia√ß√µes, a m√©dia geral das avalia√ß√µes foi: {media_geral_final:.2f}""")

if media_geral_final <= 2:
    mensagem = st.warning("Proposta de Projeto **reprovada**")
elif 2 < media_geral_final <= 4:
    mensagem ="Proposta de projeto precisa de uma **revis√£o**"
else:
    mensagem = st.success("Proposta de projeto **aprovada**")

st.markdown(mensagem)

st.markdown("")

if os.path.exists(arquivo):
    df = pd.read_excel(arquivo)

# Tabela completa
    st.subheader("üìã Tabela Completa")

    df.index = df.index +1
    df.name= "Posi√ß√£o"

    st.dataframe(df)

    # Tabela de m√©dias
    st.subheader("üìà Tabela de M√©dias por Avaliador")
    colunas_medias = [
        "Avaliador",
        "M√©dia Problema",
        "M√©dia Solu√ß√£o",
        "M√©dia Final"
    ]
    df_medias = df[colunas_medias]
    
    #df_medias.index = df_medias.index +1
    #df_medias.name= "Posi√ß√£o"

    st.dataframe(df_medias)

    # Gr√°fico com as m√©dias
    st.subheader("üìä Gr√°fico de M√©dias por Avaliador")
    df_plot = df_medias.melt(id_vars=["Avaliador"], var_name="Crit√©rio", value_name="Nota")
    fig = px.bar(df_plot, x="Avaliador", y="Nota", color="Crit√©rio", barmode="group")
    st.plotly_chart(fig, use_container_width=True)

    

    # M√©dia geral final
    media_geral_final = df["M√©dia Final"].mean()
    st.success(f"üéØ M√©dia Geral Final (todos os avaliadores): {media_geral_final:.2f}")

# Coment√°rios e Observa√ß√µes 
if "Avaliador" in df.columns and "Observa√ß√£o" in df.columns:
    st.markdown(
    "<div style='text-align: center; color: #4B0082; font-size: 25px;'>"
    "Observa√ß√µes e coment√°rios"
    "</div>",
    unsafe_allow_html=True
)

    for index, row in df.iterrows():
        if pd.notna(row["Observa√ß√£o"]):
            with st.container():
                st.write(f"**Avaliador:** {row['Avaliador']} ")
                st.info(f">{row['Observa√ß√£o']}")
                st.markdown("----------")
        else:
            st.warning("N√£o foram registradas observa√ß√µes e coment√°rios !")



    # Bot√µes de download
    st.subheader("‚¨áÔ∏è Exportar Tabelas")

    # CSV
    csv_buffer = io.StringIO()
    df.to_csv(csv_buffer, index=False)
    st.download_button("Download CSV", csv_buffer.getvalue(), file_name="avaliacoes.csv", mime="text/csv")

    # Excel
    excel_buffer = io.BytesIO()
    with pd.ExcelWriter(excel_buffer, engine='xlsxwriter') as writer:
        df.to_excel(writer, index=False)
    st.download_button("Download Excel", excel_buffer.getvalue(), file_name="avaliacoes.xlsx", mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")

else:
    st.warning("Ainda n√£o h√° avalia√ß√µes salvas.")



#if media_geral_final <= 2:
    #mensagem = "Proposta de Projeto **reprovada**"
#elif 2 < media_geral_final <= 4:
    #mensagem = "Proposta de projeto precisa de uma **revis√£o**"
#else:
    #mensagem = "Proposta de projeto **aprovada**"


#st.markdown(f"""
            #Sua m√©dia final foi: {media_geral_final:.2f}""")
#st.markdown(mensagem)


st.caption("CIP - Central de Inova√ß√µes e Projetos")
 